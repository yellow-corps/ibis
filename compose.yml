name: ibis

services:
  discord:
    container_name: discord
    image: ghcr.io/yellow-corps/ibis-discord:latest
    build:
      context: ./discord
      dockerfile: ./Containerfile
    restart: unless-stopped
    environment:
      RED_TOKEN: "${RED_TOKEN}"
    volumes:
      - type: volume
        source: discord-config
        target: /root/.config/Red-DiscordBot
      - type: volume
        source: discord-core-settings
        target: /root/.local/share/Red-DiscordBot/data/ibis/core
      - type: volume
        source: discord-alias-settings
        target: /root/.local/share/Red-DiscordBot/data/ibis/cogs/Alias
      - type: volume
        source: discord-cleanup-settings
        target: /root/.local/share/Red-DiscordBot/data/ibis/cogs/Cleanup
      - type: volume
        source: discord-extendedmodlog-settings
        target: /root/.local/share/Red-DiscordBot/data/ibis/cogs/ExtendedModLog
      - type: volume
        source: discord-modlog-settings
        target: /root/.local/share/Red-DiscordBot/data/ibis/cogs/ModLog
      - type: volume
        source: discord-msgmover-settings
        target: /root/.local/share/Red-DiscordBot/data/ibis/cogs/Msgmover
      - type: volume
        source: discord-uniqueinvites-settings
        target: /root/.local/share/Red-DiscordBot/data/ibis/cogs/UniqueInvites
      - type: volume
        source: discord-shopify-settings
        target: /root/.local/share/Red-DiscordBot/data/ibis/cogs/Shopify
      - type: volume
        source: discord-sostickets-settings
        target: /root/.local/share/Red-DiscordBot/data/ibis/cogs/SosTickets
    ports:
      - "8080:8080"

  shopify:
    container_name: shopify
    profiles:
      - shopify
    image: ghcr.io/yellow-corps/ibis-shopify:latest
    build:
      context: ./shopify
      dockerfile: ./Containerfile
    restart: unless-stopped
    stop_signal: SIGKILL
    environment:
      SHOPIFY_CLIENT_ID: "${SHOPIFY_CLIENT_ID}"
      SHOPIFY_CLIENT_SECRET: "${SHOPIFY_CLIENT_SECRET}"
    network_mode: "service:discord"

  ngrok:
    container_name: ngrok
    profiles:
      - shopify
    image: ngrok/ngrok:latest
    restart: unless-stopped
    environment:
      NGROK_AUTHTOKEN: "${NGROK_AUTHTOKEN}"
    command:
      - http
      - "--domain=${NGROK_DOMAIN}"
      - "http://discord:8080"
    depends_on:
      - shopify

  exporter:
    container_name: exporter
    profiles:
      - exporter
    image: ghcr.io/yellow-corps/ibis-exporter:latest
    build:
      context: ./exporter
      dockerfile: ./Containerfile
    restart: unless-stopped
    environment:
      RED_TOKEN: "${RED_TOKEN}"
    network_mode: "service:discord"

volumes:
  discord-config:
  discord-core-settings:
  discord-alias-settings:
  discord-cleanup-settings:
  discord-extendedmodlog-settings:
  discord-modlog-settings:
  discord-msgmover-settings:
  discord-uniqueinvites-settings:
  discord-shopify-settings:
  discord-sostickets-settings:
